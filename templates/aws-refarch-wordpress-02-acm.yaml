AWSTemplateFormatVersion: 2010-09-09
Description: Creates ACM Certificate and validates
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: DNS Configuration
        Parameters:
          - DomainName
          - HostedZoneId
      - Label:
          default: S3 Configuration
        Parameters:
          - LambdaZipsBucketName
          - QSS3KeyPrefix
    ParameterLabels:
      LambdaZipsBucketName:
        default: 'Lambda Zips S3 Bucket Name'
      QSS3KeyPrefix:
        default: 'S3Prefix'
      DomainName:
        default: Domain Name
      HostedZoneId:
        default: Route 53 Hosted Zone ID
Parameters:
  HostedZoneId:
    Description: >-
      Route 53 Hosted Zone ID to use
    Type: AWS::Route53::HostedZone::Id
    MaxLength: '32'
    Default: ''
  DomainName:
    Description: >-
      Domain Name configured for the cluster
    Type: String
    Default: ''
  LambdaZipsBucketName:
    Default: ''
    Description: >-
      S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot
      start or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: '^[0-9a-zA-Z-/]*$'
    ConstraintDescription: >-
      Quick Start key prefix can include numbers, lowercase letters, uppercase
      letters, hyphens (-), and forward slash (/).
    Default: ''
    Description: >-
      S3 key prefix for the Quick Start assets. Quick Start key prefix can
      include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
Resources:
  ACMCertificateRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Path: /
      Policies:
        - PolicyName: lambda-acm
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'acm:RequestCertificate'
                  - 'acm:DescribeCertificate'
                  - 'acm:DeleteCertificate'
                Resource:
                  - '*'
              - Effect: Allow
                Action:
                  - 'lambda:InvokeFunction'
                Resource:
                  - '*'
              - Effect: Allow
                Action:
                  - 'route53:ChangeResourceRecordSets'
                Resource: !Sub 'arn:aws:route53:::hostedzone/${HostedZoneId}'
              - Effect: Allow
                Action:
                  - 'logs:FilterLogEvents'
                Resource:
                  - '*'
  ACMCertificateLambda:
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: Creates and verifies an ACM certificate using DNS validation and route53
      Handler: lambda_function.handler
      Runtime: python2.7
      Role: !GetAtt [ACMCertificateRole, Arn]
      Timeout: 300
      Code:
        S3Bucket: !Ref LambdaZipsBucketName
        S3Key: !Sub '${QSS3KeyPrefix}functions/lambda.zip'
  ACMCertificateDNS:
    Type: 'AWS::CloudFormation::CustomResource'
    Properties:
      ServiceToken: !GetAtt [ACMCertificateLambda, Arn]
      HostedZoneId: !Ref HostedZoneId
      HostNames:
        - !Ref DomainName
        - !Join ['', ['*.', !Ref DomainName]]
Outputs:
  ACMCertificate:
    Description: ARN of the ACM-Generated SSL Certificate
    Value: !GetAtt [ACMCertificateDNS, Arn]
